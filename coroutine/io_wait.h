#pragma once
#include "scheduler.h"

/************************************************
 * 处理IO协程切换、epoll等待、等待成功、超时取消等待，
 *     及其多线程并行关系。
*************************************************
 _______ *
    ^    * -------------------
    |    *       Syscall
    |    * -------------------
    |    *          |
    |    *          v
    |    * -------------------
Coroutine* save state/fds/timeout
    |    * -------------------
    |    *          |
    |    *          v
    |    * -------------------
    |    *        yield
    |    * -------------------
 ___v___ *          |
    ^    *          v
    |    * -------------------
    |    *  push to wait list
    |    * -------------------
    |    *          |
    |    *          v
    |    * -------------------
    |    *  add fd into epoll
    |    * -------------------__________________________________________________
    |    *          |             ^                                        ^
    |    *          .  <--------- | -----------------------------------    |
    |    *          .             |                 if failed, rollback    |
    |    *          .             |                 -------------------    
Scheduler*          v             |                          |         epoll_wait
    |    * -------------------    |                          v                 
    |    *  add fd into epoll     |                 -------------------    |
    |    * -------------------    |                 delete fds in epoll    |
    |    *          |                               -------------------____v____
    |    *          v         epoll_wait                     |
    |    * -------------------                               v
    |    *     set timer          |                 -------------------
    |    * -------------------___ | ______________  pop from wait list
    |    *          |             |          ^      -------------------
    |    *          v             |          |               |
    |    * -------------------    |          |               v
    |    *     begin wait         |      time out   -------------------
 ___v___ * -------------------    |          |      push into runnable list
    ^    *          |             |          |      -------------------
    |    *          .             |          |
    |    * epoll_wait             |          |
Wait Loop*     or   .             |          |
    |    *  time out.             |          |
    |    *          .             |          |
 ___v___ *          v             |          |
    ^    * -------------------    |          |
    |    * delete fds in epoll    |          |
    |    * -------------------____v____      |
    |    *          |                        |
    |    *          v                        |
    |    * -------------------               |
    |    *    continue run                   |
    |    * -------------------               |
Coroutine*          |                        |
    |    *          v                        |
    |    * -------------------               |
    |    *    cancel timer                   |
    |    * -------------------_______________v____
    |    *          |
    |    *          v
    |    * -------------------
    |    *  Once Syscall Done
 ___v___ * -------------------
         *
*************************************************/
class IoWait
{
public:
    IoWait();

    void Switch(std::vector<Fdst> & fdsts);

    void Cancel(Task *tk);

    uint32_t WaitLoop();

private:
    int epoll_fd_;
};

